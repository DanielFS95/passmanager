services:
  portainer:
    image: portainer/portainer-ce:2.20.2
    container_name: portainer
    restart: always
    ports:
      - "127.0.0.1:9000:9000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.dfsprojekt.dk`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=letsencrypt"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "com.centurylinklabs.watchtower.enable=true"
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
#test
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: always
    ports:
      - 80:80
      - 443:443
    command:
      - "--log.level=DEBUG"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=simply"
      #- "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.letsencrypt.acme.email=${EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.websecure.http.tls.certResolver=letsencrypt"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"

    environment:
      - SIMPLY_API_KEY=${SIMPLY_API_KEY}
      - SIMPLY_ACCOUNT_NAME=${SIMPLY_ACCOUNT_NAME}
      - EMAIL=${EMAIL}
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro
      - ./data/acme.json:/letsencrypt/acme.json
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.dfsprojekt.dk`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"

  db:
    image: mariadb:latest
    container_name: mariadb
    restart: always
    env_file:
      - .env
    expose:
      - "3306"
    environment:
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      MARIADB_ALLOW_EMPTY_PASSWORD: "no"
    volumes:
      - mariadb_data:/var/lib/mysql
      - mariadb_cnf:/etc/mysql/

  api:
    build:
      context: ./API
    container_name: api
    restart: always
    expose:
      - 8000
    env_file:
      - .env
    environment:
      - DOPPLER_TOKEN=${DOPPLER_TOKEN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.dfsprojekt.dk`)"
      - "traefik.http.routers.api.rule=PathPrefix(`/user`) || PathPrefix(`/usernames`) || PathPrefix(`/tfa`)" 
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
      - "com.centurylinklabs.watchtower.enable=true"

  watchtower:
    image: containerrr/watchtower
    container_name: watchtower
    environment:
      - REPO_USER=${DOCKER_USER}
      - REPO_PASS=${DOCKER_PASS}
      - WATCHTOWER_LABEL_ENABLE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes: 
  portainer_data:
  mariadb_data:
  mariadb_cnf: